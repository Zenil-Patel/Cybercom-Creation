create database sales;

create table customers 
(
	customer_id int,
    first_name varchar(40),
    last_name varchar(40),
    email varchar(255),
    phone int unique,
    primary key (customer_id)
);

create table orders 
(
	order_id int,
    order_date date,
    customer_id int not null,
    product_id int,
    primary key (order_id)
);

create table products 
(
	product_id int,
    product_name varchar(40),
    unit_price int,
    description text,
    primary key (product_id)
);

# 1. Insert at least five customers, five products, and ten orders into the respective tables. Make sure that at least two customers have multiple orders, and at least two products are included in multiple orders.

insert into customers values 
(1, 'Zenil1','Patel1', 'zenil1.patel1@gmail.com', 00000000),
(2, 'Zenil2','Patel2', 'zenil2.patel2@yahoo.com', 11111111),
(3, 'Zenil3','Patel3', 'zenil3.patel3@hotmail.com', 22222222),
(4, 'Zenil4','Patel4', 'zenil4.patel4@rediff.com', 33333333),
(5, 'Zenil5','Patel5', 'zenil5.patel5@gmail.com', 44444444);

insert into products values
(1, 'Product Z', 4999,'This is product Z.'),
(2, 'Product E', 3599,'This is product E.'),
(3, 'Product N', 4799,'This is product N.'),
(4, 'Product I', 1499,'This is product I.'),
(5, 'Product L', 6999,'This is product L.');

insert into orders values 
(1, '2022-02-15', 1, 1),
(2, '2022-02-16', 2, 2),
(3, '2022-02-16', 3, 3),
(4, '2022-02-17', 4, 4),
(5, '2022-02-17', 5, 5),
(6, '2022-02-18', 1, 5),
(7, '2022-02-19', 2, 4),
(8, '2022-02-19', 3, 3),
(9, '2022-02-20', 4, 2),
(10, '2022-02-20',1 , 1);

# 2. Write a query that retrieves the customer's first name, last name, email, and the number of orders they have placed. The results should be ordered by the number of orders in descending order.

select c.first_name, c.last_name, c.email, c.customer_id, count(o.product_id) number_of_orders
from customers c join orders o 
on c.customer_id = o.customer_id
group by o.customer_id
order by count(o.product_id) desc;

# 3. Write a query that retrieves the product name, the total number of orders for each product, and the total revenue generated by each product. The results should be ordered by the total revenue in descending order.

select p.product_name, count(o.product_id) total_number_of_orders, sum(p.unit_price) total_revenue from
products p join orders o on
p.product_id = o.product_id
group by o.product_id
order by total_revenue desc;

# 4. Write a query that retrieves the first name, last name, email, and product name for each order. The results should only include orders where the customer has placed multiple orders.

select c.first_name, c.last_name, c.email, count(o.product_id), p.product_name from
customers c join orders o on c.customer_id=o.customer_id
join products p on p.product_id = o.product_id
group by o.customer_id
having count(o.product_id)>1;

# 5. Write a query that retrieves the first name, last name, and email for each customer who has placed at least one order for a product with a unit price greater than $50 (approx 4137).

select c.first_name, c.last_name, c.email, sum(p.unit_price) as total_amount from
customers c join orders o 
on c.customer_id = o.customer_id
join products p 
on p.product_id = o.product_id
group by o.customer_id
having count(o.product_id) > 1 and sum(p.unit_price) > 4137;  

# 6. Write a query that retrieves the product name and the number of times it has been ordered, but only includes products that have been ordered more than once.

select p.product_name, count(o.product_id) number_of_times_ordered from
products p join orders o 
on p.product_id = o.product_id
group by o.product_id
having count(o.product_id) > 1;
